{"version":3,"sources":["Components/CartPage.js","Components/Header.js","Components/Filters.js","Components/PopupBox.js","Components/Counter.js","Components/Product.js","Components/ProductList.js","Components/HomePage.js","App.js","serviceWorker.js","reduxx/reducers/samp1_reducer.js","reduxx/Constants.js","reduxx/reducers/index_reducer.js","index.js"],"names":["CartPage","props","useState","show","setShow","cartItems","setCartItems","counter","useEffect","Modal","size","dialogClassName","aria-labelledby","centered","backdrop","Header","className","onClick","onHide","icon","faTimes","Body","length","Table","striped","bordered","hover","responsive","map","p","key","name","price","qty","Number","Button","variant","val","fitem","filter","item","removeItem","faTrashAlt","Footer","sum","i","sumPrice","modalShow","setModalShow","Navbar","bg","fixed","Brand","Toggle","Container","faShoppingCart","Filters","searchterm","setSearchterm","category","setCategory","sortBy","setSortBy","catFilter","setCatFilter","state","useSelector","samp1","dispatch","useDispatch","changeHandle","e","fData","console","log","target","value","rawProducts","toLowerCase","includes","type","payload","products","filteredProducts","sort","a","b","localeCompare","Accordion","Card","as","eventKey","Collapse","Row","Col","sm","Form","Group","controlId","Label","Control","placeholder","onChange","Config_Popup","closeButton","p_name","Carousel","interval","Item","src","p_image","alt","Counter","itemCount","setItemCount","getCartValue","faMinus","cartValueChange","min","faPlus","Product","product","productDetails","pName","setPname","pImage","setPimage","productCount","setProductCount","isAdded","setIsAdded","inCartProduct","inCart","addToCart","cartProduct","itemAvaliable","pro","total","push","setTimeout","style","width","Img","image","Title","Text","updateCartValue","block","faCheck","PopupBox","ProductList","md","lg","id","HomePage","axios","get","then","res","data","getData","App","path","component","exact","Boolean","window","location","hostname","match","init_state","counterReducer","action","allReducer","combineReducers","store","createStore","Reducers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b5d9578.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport { Table, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes,faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function CartPage(props) {\n    \n\n  const [show,setShow] = useState(props.show)\n  const [cartItems,setCartItems] = useState([])\n  let counter=1;\n\n  useEffect(()=>{\n    setCartItems(props.cartItems)\n    setShow(props.show)\n  }, [props])\n\n\n  const sumPrice =()=> {\n      let sum=0;\n      for(let i=0;i<cartItems.length;i++){\n          sum=Number(sum)+ Number(cartItems[i].price * cartItems[i].qty)\n      }\n\n      return sum;\n  }\n\n  const removeItem=(val)=>{\n      let fitem = cartItems.filter(item => item.name !== val ); \n      setCartItems(fitem)\n  }\n\n        \n\t\t\treturn(\n\t\t\t\t  <Modal\n                    show={show}\n\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\tdialogClassName=\"modal-90w\"\n\t\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    backdrop=\"static\"\n\t\t\t\t\t>\n\t\t\t\t\t<Modal.Header >\n\t\t\t\t\t\t<h4 className=\"font-italic\"> Items in your Cart </h4>\n                        <span onClick={props.onHide}>\n                            <FontAwesomeIcon icon={faTimes} />\n                        </span>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body className=\" d-flex align-items-center justify-content-center\">\n                    { \n                        cartItems.length>0 ?\n                        <Table striped bordered hover responsive>\n                        <thead>\n                            <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>Price</th>\n                            <th>Quantity</th>\n                            <th>Amount</th>\n                            <th>Remove</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            cartItems.map((p)=>(\n                                <tr key={p.name}>\n                                    <td>{counter++}</td>\n                                    <td>{p.name}</td>\n                                    <td>{p.price}</td>\n                                    <td>{p.qty}</td>\n                                    <td>{Number(p.price) * Number(p.qty)}</td>\n                                    <td>\n                                        <Button variant=\"sign_btn\" onClick={()=>{removeItem(p.name)}}> \n                                            <FontAwesomeIcon icon={faTrashAlt} />\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))\n                        }\n                        </tbody>\n                        </Table> \n                        :\n                        <p> Your Cart Is Empty ! </p>\n                    }\n                   \n\t\t\t\t\t</Modal.Body>\n                   \n                    <Modal.Footer>\n                    {\n                        cartItems.length >0 &&\n                        <div>\n                             <h5>  Net Amount : {sumPrice()} </h5>\n                        </div>\n                    }\n                        \n                    </Modal.Footer>\n\t\t\t\t</Modal>\n\n\t\t\t)\n\t\t}\n    \n\n","import React , { useState } from 'react'\nimport { Navbar, Container } from 'react-bootstrap'\nimport CartPage from \"./CartPage\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Header(props) {\n \n  const [modalShow,setModalShow] = useState()\n\n  const modalClose = () =>{\n    setModalShow(false);\n  } \n\n    return(\n      <div>\n          <Navbar bg=\"primary\" variant=\"dark\" fixed=\"top\" >\n            <Navbar.Brand>\n              Veg-Cart\n            </Navbar.Brand>\n            <Navbar.Toggle />\n              <Container  className=\"justify-content-end\">\n                <Navbar.Brand onClick={()=>{setModalShow(true)}}>\n                <FontAwesomeIcon icon={faShoppingCart} />\n                <b> {props.cartItems.length} </b>\n                </Navbar.Brand>\n                                    \n              </Container>\n          </Navbar>\n\n          <CartPage \n               onHide={modalClose}  \n               show={modalShow}\n               cartItems={props.cartItems}\n          />\n\n      </div>\n    )\n  }\n\n","import React , { useState } from 'react'\nimport { Card, Accordion,Button, Form,Container,Row,Col} from 'react-bootstrap'\nimport { useSelector, useDispatch } from \"react-redux\"\n\nexport default function Filters(props) {\n\n  const [searchterm,setSearchterm] = useState(\"\")\n  const [category,setCategory] = useState(\"none\")\n  const [sortBy,setSortBy] = useState(\"none\")\n  // const [isFilter,setIsFilter] = useState(false)\n  const [catFilter,setCatFilter] = useState([])\n\n  const state = useSelector((state)=>state.samp1)\n  const dispatch = useDispatch()\n\n  const changeHandle=(e)=>{\n    \n    console.log(e.target.name);\n\n    if(e.target.name===\"searchterm\"){\n          setSearchterm(e.target.value)\n          let fData\n          if(category===\"none\")\n            fData= state.rawProducts.filter(p => p.name.toLowerCase().includes(e.target.value.toLowerCase()))\n          else\n            fData= catFilter.filter(p => p.name.toLowerCase().includes(e.target.value.toLowerCase()))\n\n          dispatch({type:\"UPDATE_PRODUCTS\",payload:fData})\n    }\n    else if(e.target.name==='category'){\n          setCategory(e.target.value)\n          setSearchterm(\"\")\n          let fData = state.rawProducts.filter(p =>  p.category===e.target.value)\n          dispatch({type:\"UPDATE_PRODUCTS\",payload:fData})\n          setCatFilter(fData)\n    }\n\n    else  if(e.target.name==='sortBy'){\n          \n      setSortBy(e.target.value)\n      let fData\n\n      let products = searchterm===\"\" || category ===\"none\" ? state.rawProducts : state.filteredProducts\n\n          if(sortBy===\"nameAsc\"){\n              fData = products.sort(\n                (a, b) => a.name.localeCompare(b.name)\n              );\n          }\n          else if(sortBy===\"nameDsc\"){\n              fData = products.sort(\n                (a, b) => b.name.localeCompare(a.name)\n              );\n          }\n          else if(sortBy===\"priceAsc\"){\n              fData = products.sort(\n                (a, b) => a.price - b.price)\n              ;\n          }\n          else if(sortBy===\"priceDsc\"){\n              fData = products.sort(\n                  (a, b) => b.price - a.price)\n          }\n          else{\n              fData=state.rawProducts;\n          }\n\n          dispatch({type:\"UPDATE_PRODUCTS\",payload:fData})\n    }\n    // setIsFilter(true)\n  }\n\n  const clearFilters=()=>{\n    setCatFilter([])\n    setSearchterm(\"\")\n    setSortBy(\"none\")\n    setCategory(\"none\")\n    dispatch({type:\"UPDATE_PRODUCTS\",payload:state.rawProducts})\n  }\n\n\n    return(\n      <div>\n            <Accordion >\n            <Card>\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"c_accordion\"  aria-labelledby=\"navbarDropdown\">\n                   Filters\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                <Card.Body className=\"text-left\">\n                <Container>\n                  <Row >\n                  <Col sm={3}>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Search Items</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Type a product\" name=\"searchterm\" value={searchterm}   onChange={changeHandle} />\n                    </Form.Group>\n                   </Col>\n\n                    <Col sm={3}>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Filter Items</Form.Label>\n                        <Form.Control as=\"select\" name=\"category\" value={category} onChange={changeHandle}>\n                          <option value=\"none\">Choose...</option>\n                          <option value=\"vegetables\">Vegetables</option>\n                          <option value=\"fruits\">Fruits</option>\n                          <option value=\"nuts\">Nuts</option>\n                        </Form.Control>\n                    </Form.Group>\n                   </Col>\n\n                    <Col sm={3}>\n                    {/* <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Sort By</Form.Label>\n                        <Form.Control as=\"select\" name =\"sortBy\" value={sortBy} onChange={changeHandle}>\n                          <option value=\"none\">Choose...</option>\n                          <option value=\"nameAsc\">Name Asc</option>\n                          <option value=\"nameDsc\">Name Dsc</option>\n                          <option value=\"priceAsc\">Price Asc</option>\n                          <option value=\"priceDsc\">Price Dsc</option>\n                        </Form.Control>\n                    </Form.Group> */}\n                   </Col>\n\n                   <Col sm={3}>\n                      <Button variant=\"outline-primary\"   className=\"filter_btn\"\n                      onClick={clearFilters}\n                      >Clear All Filters </Button>                      \n                   </Col>\n\n                   </Row>\n                   </Container>\n\n                </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n            </Accordion>\n      </div>\n    )\n  \n}","import React from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Carousel from 'react-bootstrap/Carousel'\n\n\nfunction Config_Popup(props) {\n\n\n\n        return(\n              <Modal\n                {...props}\n                size=\"md\"\n                dialogClassName=\"modal-90w\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                >\n                <Modal.Header closeButton>\n                    <h3 className=\"font-italic\"> {props.p_name} </h3>\n                </Modal.Header>\n                <Modal.Body className=\" d-flex align-items-center justify-content-center\">\n                        <Carousel   interval=\"1000\" >\n                        <Carousel.Item>\n                            <img\n                            className=\"d-block w-100\"\n                            src={props.p_image}\n                            alt=\"First slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                            className=\"d-block w-100\"\n                            src={props.p_image}\n                            alt=\"Third slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                            className=\"d-block w-100\"\n                            src={props.p_image}\n                            alt=\"Third slide\"\n                            />\n                        </Carousel.Item>\n                        </Carousel>\n                </Modal.Body>\n            </Modal>\n\n        )\n    }\n\nexport default  Config_Popup;","import React , { useEffect, useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus,faMinus } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function Counter(props) {\n  \n  const [itemCount,setItemCount] = useState(1)\n\n  const addCount=()=>{\n    setItemCount(Number(itemCount)+Number(1))\n  }\n\n  const minusCount=()=>{\n    if(itemCount>1) {\n      setItemCount( Number(itemCount)-Number(1))\n    }\n }\n\n const cartValueChange=(e)=>{\n      setItemCount(e);\n }\n\n useEffect(()=>{\n    props.getCartValue(itemCount)\n },[itemCount])\n\n\n\n    return(\n      <div>\n        <Button variant=\"sign_btn\" onClick={minusCount}>\n            <FontAwesomeIcon icon={faMinus} />\n        </Button>\n            <input type=\"number\" className=\"cart_text\" value={itemCount} onChange={(e)=>cartValueChange(e.target.value)} min=\"1\" />\n        <Button variant=\"sign_btn\" onClick={addCount}> \n            <FontAwesomeIcon icon={faPlus} />\n        </Button>\n      </div>\n      \n    )\n  \n}","import React , { useState } from 'react'\nimport { Card,Button } from 'react-bootstrap'\nimport PopupBox from \"./PopupBox\"\nimport Counter from \"./Counter\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch, useSelector } from \"react-redux\"\n\n\nexport default function Product(props) {\n\n  const product = props.productDetails\n  const [ modalShow, setModalShow ] = useState(false)\n  const [ pName, setPname] = useState(\"\")\n  const [ pImage, setPimage] = useState(\"\")\n  const [ productCount, setProductCount ] = useState(1)\n  const [ isAdded, setIsAdded ] = useState(false)\n  const dispatch = useDispatch()\n  const inCartProduct = useSelector((state)=>state.samp1.inCart)\n\n\n  const updateCartValue=(val)=>{\n    setProductCount(val)\n  }\n\n  const addToCart=()=>{\n      let cartProduct = {\n        name: product.name,\n        price: product.price,\n        qty: productCount\n      }\n\n    let itemAvaliable=false;\n\n    inCartProduct.map(pro=>{\n        if(pro.name=== product.name)\n        {\n          itemAvaliable=true;\n          let total=Number(pro.qty) +Number(productCount);\n          pro.qty=total;\n        }\n    })\n    \n    if(itemAvaliable===false){\n      inCartProduct.push(cartProduct);\n      //else we are updating the cart qty itself.\n    }\n\n    dispatch({type: \"UPDATE_CART\", payload:inCartProduct })\n    setIsAdded(true)\n    \n    setTimeout(() => {\n      setIsAdded(false)\n    }, 2000);\n  }\n\n  const openImage = () => {\n      setModalShow(true)\n      setPname(product.name)\n      setPimage(product.image)\n  }\n       \n  const modalClose = () => setModalShow(false);\n    \n    return(\n      <div>\n            <Card style={{ width: '18rem' }} className=\"custom_card\">\n            <Card.Img variant=\"top\" onClick={ openImage }\n            src={product.image} className=\"image_zoom\" />\n            <Card.Body>\n                <Card.Title>{product.name}</Card.Title>\n                <Card.Text>\n                    <b> ₹{product.price} </b>\n                </Card.Text>\n                    <Counter  getCartValue={(val)=>updateCartValue(val)}/>\n                    {\n                        isAdded ?\n                        <Button className=\"added_cart_btn\" onClick={addToCart} block> \n                          <FontAwesomeIcon icon={faCheck} />  Added to Cart\n                        </Button> :\n                        <Button className=\"add_cart_btn\" onClick={addToCart} block>Add to Cart</Button>\n                    }\n            </Card.Body>\n            </Card>\n\n           <PopupBox\n                show={modalShow}\n                onHide={modalClose}\n                p_name={pName}\n                p_image={pImage}\n            />\n\n        \n\n      </div>\n\n    )\n  \n}","import React from 'react'\nimport { Container,Row,Col } from 'react-bootstrap'\nimport Product from \"./Product\"\nimport { useSelector } from \"react-redux\"\n\n\nexport default function ProductList(props) {\n\n  const products = useSelector((state)=>state.samp1.filteredProducts)\n\n    return(\n      <div>\n         <Container>\n         <Row className=\"\">\n\n          {\n              products.map((p)=>(\n                <Col sm={12} md={6} lg={3} key={p.id} className=\"align-middle\">\n                 <Product productDetails={p}  />\n                </Col>\n              ))\n          }\n        \n        </Row>\n        </Container>\n\n      </div>\n\n      \n    )\n  \n}","import React, { useEffect } from 'react'\nimport Header from './Header'\nimport Filters from \"./Filters\"\nimport ProductList from \"./ProductList\"\nimport axios from 'axios';\nimport { useDispatch, useSelector } from \"react-redux\"\n// import { getAllProducts } from \"../ServiceCall/api\"\n\nexport default function HomePage() {\n\n    const state = useSelector((state)=>state.samp1)\n    const dispatch = useDispatch()\n\n    useEffect(()=>{\n        async function  getData() {\n            await axios.get(`https://res.cloudinary.com/sivadass/raw/upload/v1535817394/json/products.json`)\n            .then(res => {\n                dispatch({type:\"SET_PRODUCTS\", payload:res.data})\n                dispatch({type:\"UPDATE_PRODUCTS\", payload:res.data})\n            })\n        }\n        getData()\n        \n    },[])\n\n\n\n        return (\n            <div>\n                \n                <Header \n                    cartItems={state.inCart}   \n                />\n                <br /><br />\n                <Filters \n                    data = {state.filteredProducts}\n                />\n                {state.filteredProducts.length > 0 &&\n                        <ProductList \n                            productDetails={state.filteredProducts} \n                           \n                 />\n                }\n            </div>\n        )\n\n\n\n}\n","import React from 'react';\nimport './App.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport HomePage from './Components/HomePage'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Router>\n        <Switch>\n                <Route path=\"/\" component={HomePage} exact />\n                <Route path=\"/home\" component={HomePage} />\n            </Switch>\n            </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import  { setProducts, updateProducts, cart }  from \"../Constants\"\n\n const init_state={\n     rawProducts:[],\n     filteredProducts:[],\n     inCart:[]\n }\n \n const counterReducer=(state=init_state,action) => {\n    switch(action.type){\n        \n        case setProducts:\n            return {\n                ...state,\n                rawProducts:action.payload\n            }\n        \n        case updateProducts:\n            return {\n                ...state,\n                filteredProducts:action.payload\n            }\n        \n        case cart:\n            return {\n                ...state,\n                inCart:action.payload\n            }\n\n        default:\n             return state\n    }\n}\n\n\nexport default counterReducer","export const setProducts = \"SET_PRODUCTS\"\r\nexport const updateProducts = \"UPDATE_PRODUCTS\"\r\nexport const cart = \"UPDATE_CART\"\r\n","import  { combineReducers } from \"redux\";\nimport counterReducer from \"./samp1_reducer\";\n\nconst allReducer = combineReducers({\n    samp1:counterReducer\n})\n\n\nexport default allReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from \"redux\";\nimport Reducers from \"./reduxx/reducers/index_reducer\"\nimport { Provider } from \"react-redux\"\n\nconst store = createStore(Reducers)\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}